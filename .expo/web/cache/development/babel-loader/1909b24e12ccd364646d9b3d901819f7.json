{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/Tabs/index.js';\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar Dimensions = ReactNative.Dimensions,\n    View = ReactNative.View,\n    Animated = ReactNative.Animated,\n    ScrollView = ReactNative.ScrollView,\n    StyleSheet = ReactNative.StyleSheet,\n    Platform = ReactNative.Platform;\n\nvar SceneComponent = require(\"./SceneComponent\");\n\nvar _require = require(\"./DefaultTabBar\"),\n    DefaultTabBar = _require.DefaultTabBar;\n\nvar _require2 = require(\"./ScrollableTabBar\"),\n    ScrollableTabBar = _require2.ScrollableTabBar;\n\nvar ScrollableTabView = (0, _createReactClass2.default)({\n  displayName: 'ScrollableTabView',\n  statics: {\n    DefaultTabBar: DefaultTabBar,\n    ScrollableTabBar: ScrollableTabBar\n  },\n  propTypes: {\n    tabBarPosition: _propTypes2.default.oneOf(['top', 'bottom', 'overlayTop', 'overlayBottom']),\n    initialPage: _propTypes2.default.number,\n    page: _propTypes2.default.number,\n    onChangeTab: _propTypes2.default.func,\n    onScroll: _propTypes2.default.func,\n    renderTabBar: _propTypes2.default.any,\n    style: _propTypes2.default.shape({\n      style: _propTypes2.default.any\n    }),\n    contentProps: _propTypes2.default.object,\n    scrollWithoutAnimation: _propTypes2.default.bool,\n    locked: _propTypes2.default.bool,\n    prerenderingSiblingsNumber: _propTypes2.default.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: function onChangeTab() {},\n      onScroll: function onScroll() {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get('window').width,\n      sceneKeys: this.newSceneKeys({\n        currentPage: this.props.initialPage\n      })\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    var scrollFn = function scrollFn() {\n      if (_this.scrollView) {\n        _this.state.scrollValue.setValue(_this.props.initialPage);\n      }\n    };\n\n    _utils.InteractionManager.runAfterInteractions(scrollFn);\n\n    this.scrollToTimer = setTimeout(function () {\n      if (_this.scrollView) {\n        _this.scrollView.scrollTo({\n          x: _this.props.initialPage * _this.state.containerWidth,\n          animated: false\n        });\n      }\n    });\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    if (this.scrollToTimer) {\n      clearTimeout(this.scrollToTimer);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children\n      });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n  goToPage: function goToPage(pageNumber) {\n    var offset = pageNumber * this.state.containerWidth;\n\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: !this.props.scrollWithoutAnimation\n      });\n    }\n\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n  renderTabBar: function renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    }\n\n    return React.createElement(DefaultTabBar, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      }\n    }));\n  },\n  updateSceneKeys: function updateSceneKeys(_ref) {\n    var page = _ref.page,\n        _ref$children = _ref.children,\n        children = _ref$children === undefined ? this.props.children : _ref$children,\n        _ref$callback = _ref.callback,\n        callback = _ref$callback === undefined ? function () {} : _ref$callback;\n    var newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children: children\n    });\n    this.setState({\n      currentPage: page,\n      sceneKeys: newKeys\n    }, callback);\n  },\n  newSceneKeys: function newSceneKeys(_ref2) {\n    var _this2 = this;\n\n    var _ref2$previousKeys = _ref2.previousKeys,\n        previousKeys = _ref2$previousKeys === undefined ? [] : _ref2$previousKeys,\n        _ref2$currentPage = _ref2.currentPage,\n        currentPage = _ref2$currentPage === undefined ? 0 : _ref2$currentPage,\n        _ref2$children = _ref2.children,\n        children = _ref2$children === undefined ? this.props.children : _ref2$children;\n    var newKeys = [];\n\n    this._children(children).forEach(function (child, idx) {\n      var key = _this2._makeSceneKey(child, idx);\n\n      if (_this2._keyExists(previousKeys, key) || _this2._shouldRenderSceneKey(idx, currentPage)) {\n        newKeys.push(key);\n      }\n    });\n\n    return newKeys;\n  },\n  _shouldRenderSceneKey: function _shouldRenderSceneKey(idx, currentPageKey) {\n    var numOfSibling = this.props.prerenderingSiblingsNumber;\n    return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n  },\n  _keyExists: function _keyExists(sceneKeys, key) {\n    return sceneKeys.find(function (sceneKey) {\n      return key === sceneKey;\n    });\n  },\n  _makeSceneKey: function _makeSceneKey(child, idx) {\n    return child.props.heading + '_' + idx;\n  },\n  renderScrollableContent: function renderScrollableContent() {\n    var _this3 = this;\n\n    var scenes = this._composeScenes();\n\n    return React.createElement(ScrollView, _extends({\n      horizontal: true,\n      pagingEnabled: true,\n      automaticallyAdjustContentInsets: false,\n      keyboardShouldPersistTaps: 'handled',\n      contentOffset: {\n        x: this.props.initialPage * this.state.containerWidth\n      },\n      ref: function ref(scrollView) {\n        _this3.scrollView = scrollView;\n      },\n      onScroll: function onScroll(e) {\n        var offsetX = e.nativeEvent.contentOffset.x;\n\n        _this3._updateScrollValue(offsetX / _this3.state.containerWidth);\n      },\n      onMomentumScrollBegin: this._onMomentumScrollBeginAndEnd,\n      onMomentumScrollEnd: this._onMomentumScrollBeginAndEnd,\n      scrollEventThrottle: 16,\n      scrollsToTop: false,\n      showsHorizontalScrollIndicator: false,\n      scrollEnabled: !this.props.locked,\n      directionalLockEnabled: true,\n      alwaysBounceVertical: false,\n      keyboardDismissMode: 'on-drag'\n    }, this.props.contentProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      }\n    }), scenes);\n  },\n  _composeScenes: function _composeScenes() {\n    var _this4 = this;\n\n    return this._children().map(function (child, idx) {\n      var key = _this4._makeSceneKey(child, idx);\n\n      return React.createElement(SceneComponent, {\n        key: child.key,\n        shouldUpdated: _this4._shouldRenderSceneKey(idx, _this4.state.currentPage),\n        style: {\n          width: _this4.state.containerWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        }\n      }, _this4._keyExists(_this4.state.sceneKeys, key) ? child : React.createElement(View, {\n        heading: child.props.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }));\n    });\n  },\n  _onMomentumScrollBeginAndEnd: function _onMomentumScrollBeginAndEnd(e) {\n    var offsetX = e.nativeEvent.contentOffset.x;\n    var page = Math.round(offsetX / this.state.containerWidth);\n\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n  _updateSelectedPage: function _updateSelectedPage(nextPage) {\n    var localNextPage = nextPage;\n\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    var currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n  _onChangeTab: function _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n  _updateScrollValue: function _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n  _handleLayout: function _handleLayout(e) {\n    var _this5 = this;\n\n    var width = e.nativeEvent.layout.width;\n\n    if (!width || width <= 0 || Math.round(width) === Math.round(this.state.containerWidth)) {\n      return;\n    }\n\n    this.setState({\n      containerWidth: width\n    });\n    this.requestAnimationFrame && this.requestAnimationFrame(function () {\n      _this5.goToPage(_this5.state.currentPage);\n    });\n  },\n  _children: function _children() {\n    var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.children;\n    return React.Children.map(children, function (child) {\n      return child;\n    });\n  },\n  render: function render() {\n    var overlayTabs = this.props.tabBarPosition === 'overlayTop' || this.props.tabBarPosition === 'overlayBottom';\n    var tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(function (child) {\n        return child.props.heading;\n      }),\n      tabStyle: this._children().map(function (child) {\n        return child.props.tabStyle;\n      }),\n      activeTabStyle: this._children().map(function (child) {\n        return child.props.activeTabStyle;\n      }),\n      textStyle: this._children().map(function (child) {\n        return child.props.textStyle;\n      }),\n      activeTextStyle: this._children().map(function (child) {\n        return child.props.activeTextStyle;\n      }),\n      tabHeaderStyle: this._children().map(function (child) {\n        return _lodash2.default.get(child.props.heading.props, 'style', undefined);\n      }),\n      disabled: this._children().map(function (child) {\n        return child.props.disabled;\n      }),\n      accessible: this._children().map(function (child) {\n        return child.props.accessible == false ? false : true || true;\n      }),\n      accessibilityLabel: this._children().map(function (child) {\n        return child.props.accessibilityLabel;\n      }),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n\n    if (this.props.tabContainerStyle) {\n      tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n    }\n\n    if (overlayTabs) {\n      var _tabBarProps$style;\n\n      tabBarProps.style = (_tabBarProps$style = {\n        position: 'absolute',\n        left: 0,\n        right: 0\n      }, _defineProperty(_tabBarProps$style, this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom', 0), _defineProperty(_tabBarProps$style, 'backgroundColor', 'rgba(255, 255, 255, 0.7)'), _tabBarProps$style);\n    }\n\n    return React.createElement(View, {\n      style: [styles.container, this.props.style],\n      onLayout: this._handleLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      }\n    }, (this.props.tabBarPosition === 'top' || this.props.tabBarPosition === 'overlayTop') && this.renderTabBar(tabBarProps), this.renderScrollableContent(), (this.props.tabBarPosition === 'bottom' || this.props.tabBarPosition === 'overlayBottom') && this.renderTabBar(tabBarProps));\n  }\n});\nexports.default = ScrollableTabView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["React","require","Component","Dimensions","View","Animated","ScrollView","StyleSheet","Platform","ReactNative","SceneComponent","DefaultTabBar","ScrollableTabBar","ScrollableTabView","statics","propTypes","tabBarPosition","PropTypes","initialPage","page","onChangeTab","onScroll","renderTabBar","style","contentProps","scrollWithoutAnimation","locked","prerenderingSiblingsNumber","getDefaultProps","getInitialState","currentPage","scrollValue","containerWidth","sceneKeys","componentDidMount","scrollFn","InteractionManager","setTimeout","x","animated","componentWillUnmount","clearTimeout","UNSAFE_componentWillReceiveProps","props","children","goToPage","offset","pageNumber","y","callback","updateSceneKeys","newKeys","previousKeys","newSceneKeys","key","_shouldRenderSceneKey","numOfSibling","idx","currentPageKey","_keyExists","_makeSceneKey","child","renderScrollableContent","scenes","offsetX","e","_composeScenes","width","_onMomentumScrollBeginAndEnd","Math","_updateSelectedPage","localNextPage","nextPage","_onChangeTab","i","ref","from","_updateScrollValue","_handleLayout","_children","render","overlayTabs","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","_","disabled","accessible","accessibilityLabel","activeTab","position","left","right","styles","container","flex","scrollableContentAndroid"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport _ from 'lodash';\nimport { InteractionManager } from '../../utils';\nconst React = require('react');\nconst { Component } = React;\nconst ReactNative = require('react-native');\nconst {\n  Dimensions,\n  View,\n  Animated,\n  ScrollView,\n  StyleSheet,\n  Platform\n} = ReactNative;\n\nconst SceneComponent = require('./SceneComponent');\nconst { DefaultTabBar } = require('./DefaultTabBar');\nconst { ScrollableTabBar } = require('./ScrollableTabBar');\n\nconst ScrollableTabView = createReactClass({\n  statics: {\n    DefaultTabBar,\n    ScrollableTabBar\n  },\n\n  propTypes: {\n    tabBarPosition: PropTypes.oneOf([\n      'top',\n      'bottom',\n      'overlayTop',\n      'overlayBottom'\n    ]),\n    initialPage: PropTypes.number,\n    page: PropTypes.number,\n    onChangeTab: PropTypes.func,\n    onScroll: PropTypes.func,\n    renderTabBar: PropTypes.any,\n    style: PropTypes.shape({\n      style: PropTypes.any,\n    }),\n    contentProps: PropTypes.object,\n    scrollWithoutAnimation: PropTypes.bool,\n    locked: PropTypes.bool,\n    prerenderingSiblingsNumber: PropTypes.number\n  },\n\n  getDefaultProps() {\n    return {\n      tabBarPosition: 'top',\n      initialPage: 0,\n      page: -1,\n      onChangeTab: () => {},\n      onScroll: () => {},\n      contentProps: {},\n      scrollWithoutAnimation: false,\n      locked: false,\n      prerenderingSiblingsNumber: 0\n    };\n  },\n\n  getInitialState() {\n    return {\n      currentPage: this.props.initialPage,\n      scrollValue: new Animated.Value(this.props.initialPage),\n      containerWidth: Dimensions.get('window').width,\n      sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage })\n    };\n  },\n\n  componentDidMount() {\n    const scrollFn = () => {\n      if (this.scrollView) {\n        this.state.scrollValue.setValue(this.props.initialPage);\n      }\n    };\n    InteractionManager.runAfterInteractions(scrollFn);\n    // because of contentOffset is not working on Android\n    this.scrollToTimer = setTimeout(() => {\n      if (this.scrollView) {\n        this.scrollView.scrollTo({\n          x: this.props.initialPage * this.state.containerWidth,\n          animated: false\n        });\n      }\n    });\n  },\n\n  componentWillUnmount() {\n    if (this.scrollToTimer) {\n      clearTimeout(this.scrollToTimer);\n    }\n  },\n\n  UNSAFE_componentWillReceiveProps(props) {\n    if (props.children !== this.props.children) {\n      this.updateSceneKeys({\n        page: this.state.currentPage,\n        children: props.children\n      });\n    }\n\n    if (props.page >= 0 && props.page !== this.state.currentPage) {\n      this.goToPage(props.page);\n    }\n  },\n\n  goToPage(pageNumber) {\n    const offset = pageNumber * this.state.containerWidth;\n    if (this.scrollView) {\n      this.scrollView.scrollTo({\n        x: offset,\n        y: 0,\n        animated: !this.props.scrollWithoutAnimation\n      });\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: pageNumber,\n      callback: this._onChangeTab.bind(this, currentPage, pageNumber)\n    });\n  },\n\n  renderTabBar(props) {\n    if (this.props.renderTabBar === false) {\n      return null;\n    } else if (this.props.renderTabBar) {\n      return React.cloneElement(this.props.renderTabBar(props), props);\n    }\n    return <DefaultTabBar {...props} />;\n  },\n\n  updateSceneKeys({\n                    page,\n                    children = this.props.children,\n                    callback = () => {}\n                  }) {\n    const newKeys = this.newSceneKeys({\n      previousKeys: this.state.sceneKeys,\n      currentPage: page,\n      children\n    });\n    this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\n  },\n\n  newSceneKeys({\n                 previousKeys = [],\n                 currentPage = 0,\n                 children = this.props.children\n               }) {\n    const newKeys = [];\n    this._children(children).forEach((child, idx) => {\n      const key = this._makeSceneKey(child, idx);\n      if (\n        this._keyExists(previousKeys, key) ||\n        this._shouldRenderSceneKey(idx, currentPage)\n      ) {\n        newKeys.push(key);\n      }\n    });\n    return newKeys;\n  },\n\n  _shouldRenderSceneKey(idx, currentPageKey) {\n    const numOfSibling = this.props.prerenderingSiblingsNumber;\n    return (\n      idx < currentPageKey + numOfSibling + 1 &&\n      idx > currentPageKey - numOfSibling - 1\n    );\n  },\n\n  _keyExists(sceneKeys, key) {\n    return sceneKeys.find(sceneKey => key === sceneKey);\n  },\n\n  _makeSceneKey(child, idx) {\n    return `${child.props.heading}_${idx}`;\n  },\n\n  renderScrollableContent() {\n    const scenes = this._composeScenes();\n    return (\n      <ScrollView\n        horizontal\n        pagingEnabled\n        automaticallyAdjustContentInsets={false}\n        keyboardShouldPersistTaps=\"handled\"\n        contentOffset={{\n          x: this.props.initialPage * this.state.containerWidth\n        }}\n        ref={scrollView => {\n          this.scrollView = scrollView;\n        }}\n        onScroll={e => {\n          const offsetX = e.nativeEvent.contentOffset.x;\n          this._updateScrollValue(offsetX / this.state.containerWidth);\n        }}\n        onMomentumScrollBegin={this._onMomentumScrollBeginAndEnd}\n        onMomentumScrollEnd={this._onMomentumScrollBeginAndEnd}\n        scrollEventThrottle={16}\n        scrollsToTop={false}\n        showsHorizontalScrollIndicator={false}\n        scrollEnabled={!this.props.locked}\n        directionalLockEnabled\n        alwaysBounceVertical={false}\n        keyboardDismissMode=\"on-drag\"\n        {...this.props.contentProps}\n      >\n        {scenes}\n      </ScrollView>\n    );\n  },\n\n  _composeScenes() {\n    return this._children().map((child, idx) => {\n      const key = this._makeSceneKey(child, idx);\n      return (\n        <SceneComponent\n          key={child.key}\n          shouldUpdated={this._shouldRenderSceneKey(\n            idx,\n            this.state.currentPage\n          )}\n          style={{ width: this.state.containerWidth }}\n        >\n          {this._keyExists(this.state.sceneKeys, key) ? (\n            child\n          ) : (\n            <View heading={child.props.heading} />\n          )}\n        </SceneComponent>\n      );\n    });\n  },\n\n  _onMomentumScrollBeginAndEnd(e) {\n    const offsetX = e.nativeEvent.contentOffset.x;\n    const page = Math.round(offsetX / this.state.containerWidth);\n    if (this.state.currentPage !== page) {\n      this._updateSelectedPage(page);\n    }\n  },\n\n  _updateSelectedPage(nextPage) {\n    let localNextPage = nextPage;\n    if (typeof localNextPage === 'object') {\n      localNextPage = nextPage.nativeEvent.position;\n    }\n\n    const currentPage = this.state.currentPage;\n    this.updateSceneKeys({\n      page: localNextPage,\n      callback: this._onChangeTab.bind(this, currentPage, localNextPage)\n    });\n  },\n\n  _onChangeTab(prevPage, currentPage) {\n    this.props.onChangeTab({\n      i: currentPage,\n      ref: this._children()[currentPage],\n      from: prevPage\n    });\n  },\n\n  _updateScrollValue(value) {\n    this.state.scrollValue.setValue(value);\n    this.props.onScroll(value);\n  },\n\n  _handleLayout(e) {\n    const { width } = e.nativeEvent.layout;\n\n    if (\n      !width ||\n      width <= 0 ||\n      Math.round(width) === Math.round(this.state.containerWidth)\n    ) {\n      return;\n    }\n    this.setState({ containerWidth: width });\n    this.requestAnimationFrame && this.requestAnimationFrame(() => {\n      this.goToPage(this.state.currentPage);\n    });\n  },\n\n  _children(children = this.props.children) {\n    return React.Children.map(children, child => child);\n  },\n\n  render() {\n    const overlayTabs =\n      this.props.tabBarPosition === 'overlayTop' ||\n      this.props.tabBarPosition === 'overlayBottom';\n    const tabBarProps = {\n      goToPage: this.goToPage,\n      tabs: this._children().map(child => child.props.heading),\n      tabStyle: this._children().map(child => child.props.tabStyle),\n      activeTabStyle: this._children().map(child => child.props.activeTabStyle),\n      textStyle: this._children().map(child => child.props.textStyle),\n      activeTextStyle: this._children().map(\n        child => child.props.activeTextStyle\n      ),\n      tabHeaderStyle: this._children().map(child =>\n        _.get(child.props.heading.props, 'style', undefined)\n      ),\n      disabled: this._children().map(child => child.props.disabled),\n      accessible: this._children().map(child => child.props.accessible==false ? false : true || true ),\n      accessibilityLabel: this._children().map(child => child.props.accessibilityLabel),\n      activeTab: this.state.currentPage,\n      scrollValue: this.state.scrollValue,\n      containerWidth: this.state.containerWidth\n    };\n\n    if (this.props.tabBarBackgroundColor) {\n      tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n    }\n    if (this.props.tabBarActiveTextColor) {\n      tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n    }\n    if (this.props.tabBarInactiveTextColor) {\n      tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n    }\n    if (this.props.tabBarTextStyle) {\n      tabBarProps.textStyle = this.props.tabBarTextStyle;\n    }\n    if (this.props.tabBarUnderlineStyle) {\n      tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n    }\n    if (this.props.tabContainerStyle) {\n      tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n    }\n    if (overlayTabs) {\n      tabBarProps.style = {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        [this.props.tabBarPosition === 'overlayTop' ? 'top' : 'bottom']: 0,\n        backgroundColor: 'rgba(255, 255, 255, 0.7)'\n      };\n    }\n\n    return (\n      <View\n        style={[styles.container, this.props.style]}\n        onLayout={this._handleLayout}\n      >\n        {(this.props.tabBarPosition === 'top' ||\n          this.props.tabBarPosition === 'overlayTop') &&\n        this.renderTabBar(tabBarProps)}\n        {this.renderScrollableContent()}\n        {(this.props.tabBarPosition === 'bottom' ||\n          this.props.tabBarPosition === 'overlayBottom') &&\n        this.renderTabBar(tabBarProps)}\n      </View>\n    );\n  }\n});\n\nexport default ScrollableTabView;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollableContentAndroid: {\n    flex: 1\n  }\n});\n"]},"metadata":{},"sourceType":"script"}