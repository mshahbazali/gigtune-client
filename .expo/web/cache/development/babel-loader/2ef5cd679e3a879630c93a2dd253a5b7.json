{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DatePicker = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/DatePicker.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _datetimepicker = require('@react-native-community/datetimepicker');\n\nvar _datetimepicker2 = _interopRequireDefault(_datetimepicker);\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _Text = require(\"./Text\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DatePicker = exports.DatePicker = function (_React$Component) {\n  _inherits(DatePicker, _React$Component);\n\n  function DatePicker(props) {\n    _classCallCheck(this, DatePicker);\n\n    var _this = _possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call(this, props));\n\n    _this.showDatePicker = function () {\n      _this.setState({\n        modalVisible: true\n      });\n    };\n\n    _this.state = {\n      modalVisible: false,\n      defaultDate: props.defaultDate ? props.defaultDate : new Date(),\n      chosenDate: !props.placeHolderText && props.defaultDate ? props.defaultDate : undefined\n    };\n    return _this;\n  }\n\n  _createClass(DatePicker, [{\n    key: 'setDate',\n    value: function setDate(date) {\n      this.setState({\n        chosenDate: new Date(date)\n      });\n\n      if (this.props.onDateChange) {\n        this.props.onDateChange(date);\n      }\n    }\n  }, {\n    key: 'formatChosenDate',\n    value: function formatChosenDate(date) {\n      if (this.props.formatChosenDate) {\n        return this.props.formatChosenDate(date);\n      }\n\n      return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          animationType = _props.animationType,\n          disabled = _props.disabled,\n          locale = _props.locale,\n          maximumDate = _props.maximumDate,\n          minimumDate = _props.minimumDate,\n          modalTransparent = _props.modalTransparent,\n          placeHolderText = _props.placeHolderText,\n          placeHolderTextStyle = _props.placeHolderTextStyle,\n          textStyle = _props.textStyle,\n          timeZoneOffsetInMinutes = _props.timeZoneOffsetInMinutes;\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return _react2.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, _react2.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        onPress: function onPress() {\n          return !disabled ? _this2.showDatePicker() : undefined;\n        },\n        style: [{\n          padding: variables.datePickerPadding,\n          color: variables.datePickerTextColor\n        }, this.state.chosenDate ? textStyle : placeHolderTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, this.state.chosenDate ? this.formatChosenDate(this.state.chosenDate) : placeHolderText || 'Select Date'), _react2.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, _react2.default.createElement(_reactNative.Modal, {\n        supportedOrientations: ['portrait', 'landscape'],\n        animationType: animationType,\n        transparent: modalTransparent,\n        visible: this.state.modalVisible,\n        onRequestClose: function onRequestClose() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, _react2.default.createElement(_Text.Text, {\n        onPress: function onPress() {\n          return _this2.setState({\n            modalVisible: false\n          });\n        },\n        style: {\n          backgroundColor: variables.datePickerBg,\n          flex: variables.datePickerFlex\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }), _react2.default.createElement(_datetimepicker2.default, _extends({\n        date: this.state.chosenDate ? this.state.chosenDate : this.state.defaultDate,\n        onDateChange: function onDateChange(date) {\n          return _this2.setDate(date);\n        },\n        minimumDate: minimumDate,\n        maximumDate: maximumDate,\n        mode: 'date',\n        locale: locale,\n        timeZoneOffsetInMinutes: timeZoneOffsetInMinutes\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }))))));\n    }\n  }]);\n\n  return DatePicker;\n}(_react2.default.Component);\n\nDatePicker.defaultProps = {\n  disabled: false\n};","map":{"version":3,"sources":["../../../src/basic/DatePicker.js"],"names":["DatePicker","React","Component","defaultProps","disabled","modalVisible","defaultDate","props","chosenDate","date","animationType","locale","maximumDate","minimumDate","modalTransparent","placeHolderText","placeHolderTextStyle","textStyle","timeZoneOffsetInMinutes","variables","variable","padding","color","backgroundColor","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, View } from 'react-native';\n\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nimport variable from '../theme/variables/platform';\n\nimport { Text } from './Text';\n\nexport class DatePicker extends React.Component {\n  static defaultProps = {\n    disabled: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      defaultDate: props.defaultDate ? props.defaultDate : new Date(),\n      chosenDate:\n        !props.placeHolderText && props.defaultDate\n          ? props.defaultDate\n          : undefined\n    };\n  }\n\n  setDate(date) {\n    this.setState({ chosenDate: new Date(date) });\n    if (this.props.onDateChange) {\n      this.props.onDateChange(date);\n    }\n  }\n\n  showDatePicker = () => {\n    this.setState({ modalVisible: true });\n  };\n\n  formatChosenDate(date) {\n    if (this.props.formatChosenDate) {\n      return this.props.formatChosenDate(date);\n    }\n    return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\n  }\n\n  render() {\n    const {\n      animationType,\n      disabled,\n      locale,\n      maximumDate,\n      minimumDate,\n      modalTransparent,\n      placeHolderText,\n      placeHolderTextStyle,\n      textStyle,\n      timeZoneOffsetInMinutes\n    } = this.props;\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <View>\n        <View>\n          <Text\n            onPress={() => (!disabled ? this.showDatePicker() : undefined)}\n            style={[\n              {\n                padding: variables.datePickerPadding,\n                color: variables.datePickerTextColor\n              },\n              this.state.chosenDate ? textStyle : placeHolderTextStyle\n            ]}\n          >\n            {this.state.chosenDate\n              ? this.formatChosenDate(this.state.chosenDate)\n              : placeHolderText || 'Select Date'}\n          </Text>\n          <View>\n            <Modal\n              supportedOrientations={['portrait', 'landscape']}\n              animationType={animationType}\n              transparent={modalTransparent} // from api\n              visible={this.state.modalVisible}\n              onRequestClose={() => {}}\n            >\n              <Text\n                onPress={() => this.setState({ modalVisible: false })}\n                style={{\n                  backgroundColor: variables.datePickerBg,\n                  flex: variables.datePickerFlex\n                }}\n              />\n              <DateTimePicker\n                date={\n                  this.state.chosenDate\n                    ? this.state.chosenDate\n                    : this.state.defaultDate\n                }\n                onDateChange={date => this.setDate(date)}\n                minimumDate={minimumDate}\n                maximumDate={maximumDate}\n                mode=\"date\"\n                locale={locale}\n                timeZoneOffsetInMinutes={timeZoneOffsetInMinutes}\n                {...this.props}\n              />\n            </Modal>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}