{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Body, Icon, ListItem } from 'native-base';\nvar Img = 'https://github.com/mdrajibsk8/React-Native-Push-Notification-Firebase7/blob/master/maxresdefault-3.jpg?raw=true';\n\nvar Placesearch = function (_Component) {\n  _inherits(Placesearch, _Component);\n\n  var _super = _createSuper(Placesearch);\n\n  function Placesearch(props) {\n    var _this;\n\n    _classCallCheck(this, Placesearch);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"setAddress\", function (address) {\n      _this.setState({\n        address: address\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"searchAddress\", function _callee() {\n      var _this$state, area, address, country, onlyCity, API, url, response, responseJson;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, area = _this$state.area, address = _this$state.address, country = _this$state.country, onlyCity = _this$state.onlyCity, API = _this$state.API;\n              url = 'https://maps.googleapis.com/maps/api/place/autocomplete/json?input=' + address + country + onlyCity + area + 'key=' + API;\n              console.log('url', url);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 5:\n              response = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              responseJson = _context.sent;\n              console.log('responseJson', responseJson);\n\n              _this.setState({\n                allAddress: responseJson.predictions\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"listClick\", function _callee2(data) {\n      var _responseJson$results, _responseJson$results2, url, response, responseJson;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.props.coordinate) {\n                _context2.next = 12;\n                break;\n              }\n\n              url = 'https://maps.googleapis.com/maps/api/geocode/json?address=' + data.description + '&key=' + _this.state.API;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              responseJson = _context2.sent;\n              data.coordinate = responseJson === null || responseJson === void 0 ? void 0 : (_responseJson$results = responseJson.results[0]) === null || _responseJson$results === void 0 ? void 0 : (_responseJson$results2 = _responseJson$results.geometry) === null || _responseJson$results2 === void 0 ? void 0 : _responseJson$results2.location;\n\n              _this.props.SelectedAddress(data);\n\n              _context2.next = 13;\n              break;\n\n            case 12:\n              _this.props.SelectedAddress(data);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItem\", function (_ref) {\n      var item = _ref.item;\n      return _this.props.ChangList ? React.createElement(Pressable, {\n        onPress: function onPress() {\n          return _this.listClick(item);\n        }\n      }, _this.props.CustomList(item)) : React.createElement(ListItem, {\n        style: [styles.Liststyle, _this.state.ListStyle],\n        onPress: function onPress() {\n          return _this.listClick(item);\n        }\n      }, React.createElement(Body, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingHorizontal: 5\n        }\n      }, React.createElement(Icon, {\n        name: \"location-pin\",\n        type: \"Entypo\",\n        style: [styles.Iconstyle, _this.state.IconStyle]\n      }), React.createElement(Text, {\n        style: [styles.Textstyle, _this.state.TextStyle]\n      }, item.description)));\n    });\n\n    _this.state = {\n      API: _this.props.apikey,\n      country: _this.props.country ? '&components=country:' + _this.props.country + '&' : '&',\n      onlyCity: _this.props.onlyCity ? '&types=(cities)&' : '',\n      area: _this.props.area ? '&location=' + _this.props.lat + ',' + _this.props.lng + '&radius=' + _this.props.radius + '&' : '',\n      inputContainer: _this.props.InputContainer,\n      MainContainer: _this.props.MainContainer,\n      ListStyle: _this.props.ListStyle,\n      TextStyle: _this.props.ListTextStyle,\n      IconStyle: _this.props.ListIconStyle,\n      ImgStyle: _this.props.ImgStyle,\n      Img: _this.props.Img ? _this.props.Img : Img,\n      textInput: _this.props.textInput,\n      placeHolder: _this.props.placeHolder ? _this.props.placeHolder : 'Search for places',\n      StatusBarColor: _this.props.StatusBarColor ? _this.props.StatusBarColor : '#fff',\n      StatusBarStyle: _this.props.StatusBarStyle ? _this.props.StatusBarStyle : 'dark-content',\n      ContainerBackgroundColor: _this.props.ContainerBackgroundColor ? _this.props.ContainerBackgroundColor : '#fff',\n      address: '',\n      allAddress: []\n    };\n    return _this;\n  }\n\n  _createClass(Placesearch, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          StatusBarColor = _this$state2.StatusBarColor,\n          StatusBarStyle = _this$state2.StatusBarStyle,\n          ContainerBackgroundColor = _this$state2.ContainerBackgroundColor;\n      return React.createElement(SafeAreaView, {\n        style: [styles.Container, {\n          backgroundColor: ContainerBackgroundColor\n        }]\n      }, Platform.OS == 'android' ? React.createElement(StatusBar, {\n        barStyle: StatusBarStyle,\n        backgroundColor: StatusBarColor\n      }) : null, this.props.Changeheader ? this.props.CustomHeader : React.createElement(View, {\n        style: [styles.mainInputContainer, this.state.MainContainer]\n      }, React.createElement(View, {\n        style: [styles.inputContainer2, this.state.inputContainer]\n      }, React.createElement(Icon, {\n        name: \"search1\",\n        type: \"AntDesign\",\n        style: {\n          marginLeft: 20,\n          fontSize: 20\n        }\n      }), React.createElement(TextInput, {\n        style: [styles.inputs, this.state.textInput],\n        placeholder: this.props.placeHolder,\n        underlineColorAndroid: \"transparent\",\n        autoFocus: true,\n        returnKeyType: \"search\",\n        onKeyPress: this.searchAddress,\n        onChangeText: function onChangeText(address) {\n          return _this2.setAddress(address);\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 20,\n          fontSize: 20\n        },\n        onPress: function onPress() {\n          return _this2.props.onClose(true);\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-close-outline\",\n        type: \"Ionicons\"\n      })))), React.createElement(FlatList, {\n        data: this.state.allAddress,\n        extraData: this.state,\n        renderItem: this.renderItem,\n        keyboardShouldPersistTaps: \"always\",\n        keyExtractor: function keyExtractor(item) {\n          return item.place_id.toString();\n        }\n      }), this.props.removeImg ? null : React.createElement(View, {\n        style: {\n          width: '100%',\n          height: 190,\n          position: 'absolute',\n          bottom: 0,\n          zIndex: -9999999\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: this.state.Img\n        },\n        style: {\n          width: '100%',\n          height: '100%',\n          resizeMode: 'contain'\n        }\n      })));\n    }\n  }]);\n\n  return Placesearch;\n}(Component);\n\nexport { Placesearch as default };\nvar styles = StyleSheet.create({\n  Container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  inputs: {\n    height: 45,\n    width: '76%',\n    borderColor: '#fff',\n    backgroundColor: '#ECF0F1',\n    marginLeft: 10,\n    fontWeight: '500'\n  },\n  mainInputContainer: {\n    borderColor: '#ECF0F1',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  inputContainer2: {\n    flex: 1,\n    backgroundColor: '#ECF0F1',\n    marginHorizontal: 15,\n    marginVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: 3\n  },\n  Liststyle: {\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    borderWidth: 0,\n    paddingHorizontal: 5\n  },\n  Iconstyle: {\n    color: '#4b4b4b'\n  },\n  Textstyle: {\n    fontSize: 13.5,\n    marginHorizontal: 7,\n    fontWeight: '600',\n    color: '#566573'\n  },\n  Imgstyle: {\n    width: '100%',\n    height: 200,\n    resizeMode: 'center'\n  },\n  image: {\n    flex: 1,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["index.js"],"names":["Img","constructor","API","country","onlyCity","area","inputContainer","MainContainer","ListStyle","TextStyle","IconStyle","ImgStyle","textInput","placeHolder","StatusBarColor","StatusBarStyle","ContainerBackgroundColor","address","allAddress","url","console","response","fetch","responseJson","predictions","data","item","styles","flexDirection","alignItems","paddingHorizontal","render","backgroundColor","marginLeft","fontSize","marginRight","width","height","position","bottom","zIndex","uri","resizeMode","Container","flex","inputs","borderColor","fontWeight","mainInputContainer","marginTop","inputContainer2","marginHorizontal","marginVertical","borderRadius","Liststyle","borderWidth","Iconstyle","color","Textstyle","Imgstyle","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  StyleSheet,\n  FlatList,\n  Pressable,\n  Image,\n  SafeAreaView,\n  TouchableOpacity,\n  StatusBar,\n  Platform,\n} from 'react-native';\nimport { Body, Icon, ListItem } from 'native-base';\n\nconst Img =\n  'https://github.com/mdrajibsk8/React-Native-Push-Notification-Firebase7/blob/master/maxresdefault-3.jpg?raw=true';\n\nexport default class Placesearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      API: this.props.apikey,\n      country: this.props.country\n        ? '&components=country:' + this.props.country + '&'\n        : '&',\n      onlyCity: this.props.onlyCity ? '&types=(cities)&' : '',\n      area: this.props.area\n        ? '&location=' +\n          this.props.lat +\n          ',' +\n          this.props.lng +\n          '&radius=' +\n          this.props.radius +\n          '&'\n        : '',\n      inputContainer: this.props.InputContainer,\n      MainContainer: this.props.MainContainer,\n      ListStyle: this.props.ListStyle,\n      TextStyle: this.props.ListTextStyle,\n      IconStyle: this.props.ListIconStyle,\n      ImgStyle: this.props.ImgStyle,\n      Img: this.props.Img ? this.props.Img : Img,\n      textInput: this.props.textInput,\n      placeHolder: this.props.placeHolder\n        ? this.props.placeHolder\n        : 'Search for places',\n      StatusBarColor: this.props.StatusBarColor\n        ? this.props.StatusBarColor\n        : '#fff',\n      StatusBarStyle: this.props.StatusBarStyle\n        ? this.props.StatusBarStyle\n        : 'dark-content',\n      ContainerBackgroundColor: this.props.ContainerBackgroundColor\n        ? this.props.ContainerBackgroundColor\n        : '#fff',\n      address: '',\n      allAddress: [],\n    };\n  }\n\n  setAddress = (address) => {\n    this.setState({ address });\n  };\n\n  searchAddress = async () => {\n    // alert()\n    const { area, address, country, onlyCity, API } = this.state;\n    // console.log(\"searc h >>>>>>>\")\n    let url =\n      'https://maps.googleapis.com/maps/api/place/autocomplete/json?input=' +\n      address +\n      country +\n      onlyCity +\n      area +\n      'key=' +\n      API;\n    console.log('url', url);\n    let response = await fetch(url);\n    let responseJson = await response.json();\n    console.log('responseJson', responseJson);\n    this.setState({\n      allAddress: responseJson.predictions,\n    });\n  };\n\n  listClick = async (data) => {\n    if (this.props.coordinate) {\n      // console.log(\"data.description\",data.description)\n      let url =\n        'https://maps.googleapis.com/maps/api/geocode/json?address=' +\n        data.description +\n        '&key=' +\n        this.state.API;\n      // console.log(\"url\",url)\n      let response = await fetch(url);\n      let responseJson = await response.json();\n      data.coordinate = responseJson?.results[0]?.geometry?.location;\n      this.props.SelectedAddress(data);\n    } else {\n      this.props.SelectedAddress(data);\n    }\n  };\n\n  renderItem = ({ item }) => {\n    return this.props.ChangList ? (\n      <Pressable onPress={() => this.listClick(item)}>\n        {this.props.CustomList(item)}\n      </Pressable>\n    ) : (\n      <ListItem\n        style={[styles.Liststyle, this.state.ListStyle]}\n        onPress={() => this.listClick(item)}\n      >\n        <Body\n          style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            paddingHorizontal: 5,\n          }}\n        >\n          <Icon\n            name=\"location-pin\"\n            type=\"Entypo\"\n            style={[styles.Iconstyle, this.state.IconStyle]}\n          />\n          <Text style={[styles.Textstyle, this.state.TextStyle]}>\n            {item.description}\n          </Text>\n        </Body>\n      </ListItem>\n    );\n  };\n\n  render() {\n    const { StatusBarColor, StatusBarStyle, ContainerBackgroundColor } =\n      this.state;\n    return (\n      <SafeAreaView\n        style={[\n          styles.Container,\n          { backgroundColor: ContainerBackgroundColor },\n        ]}\n      >\n        {Platform.OS == 'android' ? (\n          <StatusBar\n            barStyle={StatusBarStyle}\n            backgroundColor={StatusBarColor}\n          />\n        ) : null}\n        {this.props.Changeheader ? (\n          this.props.CustomHeader\n        ) : (\n          <View style={[styles.mainInputContainer, this.state.MainContainer]}>\n            <View style={[styles.inputContainer2, this.state.inputContainer]}>\n              <Icon\n                name=\"search1\"\n                type=\"AntDesign\"\n                style={{ marginLeft: 20, fontSize: 20 }}\n              />\n              <TextInput\n                style={[styles.inputs, this.state.textInput]}\n                placeholder={this.props.placeHolder}\n                underlineColorAndroid=\"transparent\"\n                autoFocus={true}\n                returnKeyType=\"search\"\n                onKeyPress={this.searchAddress}\n                onChangeText={(address) => this.setAddress(address)}\n              />\n              <TouchableOpacity\n                style={{ marginRight: 20, fontSize: 20 }}\n                onPress={() => this.props.onClose(true)}\n              >\n                <Icon name=\"ios-close-outline\" type=\"Ionicons\" />\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n\n        <FlatList\n          data={this.state.allAddress}\n          extraData={this.state}\n          renderItem={this.renderItem}\n          // style={{flex:1,backgroundColor:'#fff'}}\n          keyboardShouldPersistTaps=\"always\"\n          keyExtractor={(item) => item.place_id.toString()}\n        />\n        {this.props.removeImg ? null : (\n          <View\n            style={{\n              width: '100%',\n              height: 190,\n              position: 'absolute',\n              bottom: 0,\n              zIndex: -9999999,\n            }}\n          >\n            <Image\n              source={{ uri: this.state.Img }}\n              style={{ width: '100%', height: '100%', resizeMode: 'contain' }}\n            />\n          </View>\n        )}\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  Container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    // marginTop:StatusBar.currentHeight\n  },\n  inputs: {\n    height: 45,\n    width: '76%',\n    borderColor: '#fff',\n    backgroundColor: '#ECF0F1',\n    marginLeft: 10,\n    fontWeight: '500',\n  },\n  mainInputContainer: {\n    borderColor: '#ECF0F1',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 10,\n    // backgroundColor:'#76a044'\n  },\n  inputContainer2: {\n    flex: 1,\n    backgroundColor: '#ECF0F1',\n    marginHorizontal: 15,\n    marginVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: 3,\n  },\n  Liststyle: {\n    // backgroundColor:'rgba(243,246,251,255)',\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    borderWidth: 0,\n    paddingHorizontal: 5,\n  },\n  Iconstyle: {\n    color: '#4b4b4b',\n  },\n  Textstyle: {\n    fontSize: 13.5,\n    marginHorizontal: 7,\n    fontWeight: '600',\n    color: '#566573',\n  },\n  Imgstyle: {\n    width: '100%',\n    height: 200,\n    resizeMode: 'center',\n  },\n  image: {\n    flex: 1,\n    resizeMode: 'contain',\n    // justifyContent: \"center\"\n  },\n});\n"]},"metadata":{},"sourceType":"module"}